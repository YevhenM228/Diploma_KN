import json
import os
import gradio as gr
from tracker import detection_on_image, detection_on_video

APP_TITLE = "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–æ–≤–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –≤–∏—è–≤–ª–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤"

with gr.Blocks(theme=gr.themes.Soft(primary_hue="blue"), title="–ê–Ω–∞–ª—ñ–∑ –∑–æ–±—Ä–∞–∂–µ–Ω—å —Ç–∞ –≤—ñ–¥–µ–æ") as demo:
    gr.Markdown(f"""
    <h1 style='text-align:center'>{APP_TITLE}</h1>
    <p style='text-align:center'>–¶–µ–π –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫ –¥–æ–∑–≤–æ–ª—è—î –ø—Ä–æ–≤–æ–¥–∏—Ç–∏ –≤–∏—è–≤–ª–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ –Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è—Ö —Ç–∞ —É –≤—ñ–¥–µ–æ. –û–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª, —ñ –º–∏ –∑—Ä–æ–±–∏–º–æ —Ä–µ—à—Ç—É.</p>
    """)

    with gr.Row(variant='panel'):
        with gr.Column(scale=1):
            with gr.Tabs():
                with gr.TabItem("üñºÔ∏è –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è"):
                    image_input = gr.Image(type="numpy", label="–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
                    button_image = gr.Button("–ü–æ—á–∞—Ç–∏ —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è", variant="primary")

                with gr.TabItem("üé¨ –í—ñ–¥–µ–æ"):
                    video_input = gr.File(label="–í—ñ–¥–µ–æ —Ñ–∞–π–ª", file_types=[".mp4", ".avi", ".mov"])
                    button_video = gr.Button("–ü–æ—á–∞—Ç–∏ —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è", variant="primary")
            
            status_message = gr.Textbox(label="–°—Ç–∞–Ω —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è", interactive=False, visible=False)

        with gr.Column(scale=1):
            gr.Label("–†–µ–∑—É–ª—å—Ç–∞—Ç–∏")
            output_image = gr.Image()
            download_image = gr.File(label="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è", visible=False)
            output_video = gr.Video(visible=False)
            download_video = gr.File(label="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤—ñ–¥–µ–æ", visible=False)   # <-- –î–æ–¥–∞—î–º–æ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–µ–æ

            with gr.Accordion("üìä –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ñ–∞–π–ª–∏", open=False):
                json_result = gr.JSON(label="–î–∞–Ω—ñ —É —Ñ–æ—Ä–º–∞—Ç—ñ JSON")
                with gr.Row():
                    download_json = gr.File(label="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ JSON")
                    download_csv = gr.File(label="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ CSV")

    def process_image(img):
        if img is None:
            raise gr.Error("–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –ø–æ—á–∞—Ç–∫—É –∞–Ω–∞–ª—ñ–∑—É.")
        yield {status_message: gr.update(value="–û–±—Ä–æ–±–ª—è—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è...", visible=True)}

        try:
            result_img, json_path, csv_path, img_path = detection_on_image(img)
            with open(json_path, 'r', encoding='utf-8') as f:
                json_content = json.load(f)

            yield {
                output_image: gr.update(value=result_img),
                output_video: gr.update(visible=False),
                download_image: gr.update(value=img_path, visible=True),
                download_video: gr.update(visible=False, value=None),
                json_result: gr.update(value=json_content),
                download_json: gr.update(value=json_path, visible=True),
                download_csv: gr.update(value=csv_path, visible=True),
                status_message: gr.update(visible=False)
            }
        except Exception as error:
            print(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ–±—Ä–æ–±–∫–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è: {error}")
            raise gr.Error("–í–∏–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –∞–Ω–∞–ª—ñ–∑—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —ñ–Ω—à–∏–π —Ñ–∞–π–ª.")

    def process_video(vid):
        if vid is None:
            raise gr.Error("–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –≤—ñ–¥–µ–æ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –∞–Ω–∞–ª—ñ–∑—É.")

        yield {status_message: gr.update(value="–ô–¥–µ –æ–±—Ä–æ–±–∫–∞ –≤—ñ–¥–µ–æ, –±—É–¥—å –ª–∞—Å–∫–∞ –∑–∞—á–µ–∫–∞–π—Ç–µ...", visible=True)}

        try:
            first_frame, json_path, csv_path, video_path = detection_on_video(vid)
            with open(json_path, 'r', encoding='utf-8') as f:
                json_content = json.load(f)

            yield {
                output_image: gr.update(value=first_frame),
                # output_video: gr.update(value=video_path, visible=True),
                download_image: gr.update(visible=False, value=None),
                download_video: gr.update(value=video_path, visible=True),
                json_result: gr.update(value=json_content),
                download_json: gr.update(value=json_path, visible=True),
                download_csv: gr.update(value=csv_path, visible=True),
                status_message: gr.update(visible=False)
            }
        except Exception as error:
            print(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ–±—Ä–æ–±–∫–∏ –≤—ñ–¥–µ–æ: {error}")
            raise gr.Error("–ü—ñ–¥ —á–∞—Å –æ–±—Ä–æ–±–∫–∏ –≤—ñ–¥–µ–æ –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª—É.")

    all_outputs = [
        output_image,
        output_video,
        download_image,
        download_video,    
        json_result,
        download_json,
        download_csv,
        status_message
    ]
    button_image.click(fn=process_image, inputs=image_input, outputs=all_outputs)
    button_video.click(fn=process_video, inputs=video_input, outputs=all_outputs)

if __name__ == "__main__":
    demo.launch(debug=True)
